#!/usr/bin/env python3

import os
import shutil
import subprocess
import sys

rhys_version = "20.02"
basedir = os.path.dirname(sys.argv[0])
gamedir = os.path.dirname(sys.argv[2])
libdir = basedir + "/fnalibs"
gacdir = basedir + "/fna"
mono_path = "/usr/bin/mono"

ld_path_var = "LD_LIBRARY_PATH"
mono_path_var = "MONO_PATH"
sw_path_var = ""

def nonzero(s):
	return len(s) > 0 and s != "0"

def append_ldpath(path):
	if ld_path_var in os.environ:
		os.environ[ld_path_var] = path + ":" + os.environ[ld_path_var]
	else:
		os.environ[ld_path_var] = path

def steamworks():
	swversion = None
	# TODO: Detect Steamworks.NET version
	if (swversion == None):
		return
	sw_path_var = os.path.join(swdir, swversion)
	append_ldpath(sw_path_var)

def firsttime(log_file):
	processed = os.path.join(gamedir, "RHYS_PROCESSED")
	if os.path.exists(processed):
		return
	# TODO: XnaToFna Windows Mode, wmpcvt.sh
	if (len(sw_path_var) > 0):
		swsrc = os.path.join(sw_path_var, "Steamworks.NET.dll")
		swdst = os.path.join(gamedir, "Steamworks.NET.dll")
		shutil.copyfile(swsrc, swdst)
	processed_file = open(processed, "w+")
	processed_file.write(rhys_version)
	processed_file.close()

def run():
	if os.path.basename(str(sys.argv[2])) == "iscriptevaluator.exe":
		return
	log_file = None
	if "SteamGameId" in os.environ:
		if "RHYS_LOG" in os.environ and nonzero(os.environ["RHYS_LOG"]):
			lfile_path = os.environ["HOME"] + "/steam-" + os.environ["SteamGameId"] + ".log"
		if os.path.exists(lfile_path):
			os.remove(lfile_path)
		log_file = open(lfile_path, "w+")
		log_file.write("======================\n")
		log_file.write("Rhys: " + rhys_version + "\n")
		log_file.write("SteamGameId: " + os.environ["SteamGameId"] + "\n")
		log_file.write("Command: " + str(sys.argv[2:]) + "\n")
		log_file.write("======================\n")
		log_file.flush()
	steamworks()
	firsttime(log_file)
	append_ldpath(libdir)
	if mono_path_var in os.environ:
		os.environ[mono_path_var] = gacdir + ":" + os.environ[mono_path_var]
	else:
		os.environ[mono_path_var] = gacdir
	os.environ["MONO_IOMAP"] = "all"
	subprocess.call([mono_path, sys.argv[2]], stderr=log_file, stdout=log_file)

if sys.argv[1] == "run":
	run()
elif sys.argv[1] == "waitforexitandrun":
	# Nothing special?
	run()
elif sys.argv[1] == "getcompatpath":
	# Anything to do here?
	sys.exit(1)
elif sys.argv[1] == "getnativepath":
	# Anything to do here?
	sys.exit(1)
else:
	log("Need a verb.")
	sys.exit(1)

sys.exit(0)

# vim: set syntax=python:
